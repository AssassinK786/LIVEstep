#!/usr/bin/env bash

# This script is executed on the build host
# at the time when the image is created. This is just a temporary script
# until the software below is available in pkg.
# Ideally everything gets upstreamed, removing the need for the bulk of this file.

HERE=$(readlink -f .)

if [ -z "${uzip}" ] ; then
 echo "\$uzip missing. Exiting"
fi

VERSION_TEXT=$(date +'%d/%m/%Y') "$CIRRUS_REPO_CLONE_URL" "$CIRRUS_CHANGE_IN_REPO"

pkg install -y git gmake gnustep-make gnustep-gui gnustep xcb-util xcb-util-wm libXfixes cairo librsvg2 pkgconf ImageMagick6 wget librsvg2 font-bh-ttf 

. /usr/local/GNUstep/System/Makefiles/GNUstep.sh

cd /tmp

git clone "https://github.com/BertrandDekoninck/TopBar"
cd TopBar
sed -i -e 's|@"GNUstep"|@"TODO: Show non-GNUstep menu here. Can you implement it? https://github.com/BertrandDekoninck/TopBar/issues/1"|g' TopBar.m
gmake
ls "${uzip}"
DESTDIR="${uzip}" gmake install
cd -

REPO="AlessandroSangiuliano/rik.theme"
git clone "https://github.com/${REPO}"
cd $(basename "${REPO}") # sic!
gmake
ls "${uzip}"
DESTDIR="${uzip}" gmake install
cd -

# Build dependency needed for uroswm
REPO="AlessandroSangiuliano/XcbKit"
git clone "https://github.com/${REPO}"
cd $(basename "${REPO}")/XCBKit # sic!
git checkout feature/gnustep_support
gmake
ls "${uzip}"
gmake install # Install on the build system; this is needed for libraries
DESTDIR="${uzip}" gmake install
cd -

REPO="AlessandroSangiuliano/uroswm"
git clone "https://github.com/${REPO}"
cd $(basename "${REPO}")/$(basename "${REPO}")
git checkout develop
gmake
ls "${uzip}"
DESTDIR="${uzip}" gmake install
cd -

# Build TextEdit
# as it is missing from FreeBSD pkg; FIXME
git clone https://github.com/ericwa/TextEdit
cd TextEdit/
gmake
DESTDIR="${uzip}" gmake install
cd -

# Replace TextEdit icon
curl https://raw.githubusercontent.com/zayronxio/Mojave-CT/master/apps/128/accessories-text-editor.svg > "${uzip}"/usr/local/GNUstep/Local/Applications/TextEdit.app/Resources/accessories-text-editor.svg
sed -i -e 's|.icns|.png|g' "${uzip}"/usr/local/GNUstep/Local/Applications/TextEdit.app/Resources/Info-gnustep.plist
sed -i -e 's|.icns|.png|g' "${uzip}"/usr/local/GNUstep/Local/Applications/TextEdit.app/Resources/TextEdit.desktop
rm  "${uzip}"/usr/local/GNUstep/Local/Applications/TextEdit.app/Resources/accessories-text-editor.icns
rm  "${uzip}"/usr/local/GNUstep/Local/Applications/TextEdit.app/Resources/*-e 
rsvg-convert -a -w 48 -h 48 "${uzip}"/usr/local/GNUstep/Local/Applications/TextEdit.app/Resources/accessories-text-editor.svg -o "${uzip}"/usr/local/GNUstep/Local/Applications/TextEdit.app/Resources/accessories-text-editor.png

# Replace icons for applications in Local; TODO: Complete this task for all icons and also for those in System
set +e # Continue in case of errors
REPLACEMENTS="AClock;apps/128/clock AdressManager;apps/128/address-book.svg batmon;devices/128/battery.svg Chess;apps/128/chess.svg FTP;apps/128/com.github.alecaddd.taxi.svg"
for REPLACEMENT in $REPLACEMENTS ; do
  APP=$(echo $REPLACEMENT | cut -d ";" -f 1)
  ICON=$(echo $REPLACEMENT | cut -d ";" -f 2)
  if [ -e "${uzip}/usr/local/GNUstep/Local/Applications/${APP}.app/Resources/${APP}.desktop" ] ; then
    OLD=$(echo  "${uzip}/usr/local/GNUstep/Local/Applications/${APP}.app/Resources/${APP}.desktop" | grep Icon= | cut -d "=" -f 2 | sed -e 's|.tiff||g' | sed -e 's|.icns||g')
    curl https://raw.githubusercontent.com/zayronxio/Mojave-CT/master/$ICON > "${uzip}/usr/local/GNUstep/Local/Applications/${APP}.app/Resources/${OLD}.svg"
    sed -i -e 's|.icns|.png|g' "${uzip}/usr/local/GNUstep/Local/Applications/${APP}.app/Resources/Info-gnustep.plist" || true
    sed -i -e 's|.icns|.png|g' "${uzip}/usr/local/GNUstep/Local/Applications/${APP}.app/Resources/${APP}.desktop" || true
    sed -i -e 's|.tiff|.png|g' "${uzip}/usr/local/GNUstep/Local/Applications/${APP}.app/Resources/Info-gnustep.plist" || true
    sed -i -e 's|.tiff|.png|g' "${uzip}/usr/local/GNUstep/Local/Applications/${APP}.app/Resources/${APP}.desktop" || true
    rm  "${uzip}"/usr/local/GNUstep/Local/Applications/${APP}.app/Resources/*-e 
    rsvg-convert -a -w 48 -h 48 "${uzip}/usr/local/GNUstep/Local/Applications/${APP}.app/Resources/${OLD}.svg" -o "${uzip}/usr/local/GNUstep/Local/Applications/${APP}.app/Resources/${OLD}.png"
  fi
done
set -e # Do not continue in case of errors

# Build all applications for the GNUstep Applications project
# as the ones in FreeBSD pkg are not complete; FIXME
git clone https://github.com/gnustep/gap/
cd gap/
gmake
DESTDIR="${uzip}" gmake install
cd -

# Modified GWorkspace by https://github.com/BertrandDekoninck, see
# https://github.com/BertrandDekoninck/WindowMaker-session
# White labels for icons on the desktop and a singleclick setting for the dock.
# To enable single click, type 'defaults write GWorkspace dockclickpolicy 1'.
# TODO: Make use of "Volume checking and unmounting"
git clone https://github.com/BertrandDekoninck/gworkspace
cd gworkspace
# Remove all wrappers for applications we don't ship
# TODO: Dynamically generate wrappers by watching the directories
# in which XDG desktop files can reside
rm -rf Apps_wrappers/*.app
./configure --enable-fake-main
gmake
DESTDIR="${uzip}" gmake install
cd -

# An editor that can at least edit .plist files, and provides code completion
#wget http://download-mirror.savannah.gnu.org/releases/gnustep-nonfsf/HighlighterKit-0.1.3.tar.gz
#tar xf HighlighterKit-0.1.3.tar.gz
#cd ./HighlighterKit-*/
#gmake
#cp -r ./HighlighterKit.framework "/usr/local/GNUstep/Local/Library/Frameworks/" # FIXME: 'gmake install' fails; install to local system
#cp -r ./HighlighterKit.framework "${uzip}/usr/local/GNUstep/Local/Library/Frameworks/" # FIXME: 'gmake install' fails; install to target system
#cd -
#wget http://download-mirror.savannah.gnu.org/releases/gnustep-nonfsf/Gemas-0.4.tar.gz
#tar xf Gemas-0.4.tar.gz
#cd Gemas-*/
#gmake
#cp -r ./Gemas.app/ "${uzip}/usr/local/GNUstep/Local/Applications/" # FIXME: 'gmake install' fails
#cd "${HERE}"

# Turn XDG desktop files into something GWorkspace understands
chroot "${uzip}" find /usr/local/share/applications/ -name '*.desktop' -exec desktop2app {} /usr/local/GNUstep/Local/Applications/ \;
chroot "${uzip}" find /usr/share/skel/Desktop/ -name '*.desktop' -exec desktop2app {} /usr/share/skel/Desktop/ \;
chroot "${uzip}" find /usr/share/skel/Desktop/ -name '*.desktop' -delete
rm -rf "${uzip}"/*.core

# Try to fix rc order issue; TODO: if this works then this probably needs to be put into build.sh
sed -i -e 's|^# REQUIRE: .*|# REQUIRE: dhclient DAEMON dbus|g' "${uzip}/usr/local/etc/rc.d/avahi-daemon"
rm "${uzip}/usr/local/etc/rc.d/avahi-daemon-e" || true
sed -i -e 's|^# REQUIRE: .*|# REQUIRE: dhclient NETWORKING syslogd|g' "${uzip}/etc/rc.d/ntpdate"
rm "${uzip}/etc/rc.d/ntpdate-e" || true

# Not every about box of every application GNUstep branded
rm -f "${uzip}"/usr/local/GNUstep/System/Library/Images/LogoGNUstep.tiff

# Get additional applications
mkdir -p "${uzip}/usr/local/GNUstep/Local/Applications/Utilities/"
wget -c "https://github.com/probonopd/Utilities/archive/master.zip"
unzip master.zip
mv ./Utilities-master/*.app "${uzip}/usr/local/GNUstep/Local/Applications/Utilities/"
rm -rf Utilities-master/ master.zip
( cd "${uzip}/usr/share/skel/Desktop/" ; find "${uzip}"/usr/local/GNUstep/Local/Applications/Utilities -name '*.app' -exec ln -s {} . \; )

# Get wallpaper
# TODO: Also check
# https://papers.co/desktop/vg41-ribbon-abstract-art-blue-pattern/
# https://papers.co/desktop/vm16-abstract-blue-rhytm-pattern/
wget "https://res.allmacwallpaper.com/get/iMac-21-inch-wallpapers/Minimalist-blue-1920x1080/1686-9.jpg" -O "${uzip}"/usr/local/share/slim/themes/default/background.jpg

# Add information about the build to the about box of GWorkspace and to the wallpaper
# at least for the continuous builds
mogrify -fill white -pointsize 13 -gravity SouthEast -draw "text 10,10 '$VERSION_TEXT'" "${uzip}"/usr/local/share/slim/themes/default/background.jpg
sed -i -e 's|07 2016|'"${VERSION_TEXT}"'|g' "${uzip}"/usr/local/GNUstep/Local/Applications/GWorkspace.app/Resources/Info-gnustep.plist
rm "${uzip}"/usr/local/GNUstep/Local/Applications/GWorkspace.app/Resources/Info-gnustep.plist-e || true

# Autologin without a display manager
# Commented out because not working; using slim for now
# chroot "${uzip}" echo 'al.liveuser:al=liveuser:tc=std.230400:' >> /etc/gettytab
# chroot "${uzip}" sed -i -e 's|^ttyv0.*$|ttyv0 "/usr/libexec/getty al.liveuser" xterm on secure|g' /etc/ttys
# chroot "${uzip}" rm /etc/ttys-e
# chroot "${uzip}" echo 'if $tty == ttyv0 startx' >> /usr/share/skel/dot.login 
